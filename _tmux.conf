# $Id: screen-keys.conf,v 1.7 2010-07-31 11:39:13 nicm Exp $
#
# By Nicholas Marriott. Public domain.
#
# This configuration file binds many of the common GNU screen key bindings to
# appropriate tmux key bindings. Note that for some key bindings there is no
# tmux analogue and also that this set omits binding some commands available in
# tmux but not in screen.
#
# Note this is only a selection of key bindings and they are in addition to the
# normal tmux key bindings. This is intended as an example not as to be used
# as-is.

# Set the prefix to ^A.
set -g default-terminal "xterm-256color"
set -g status-left " #[fg=colour123]#H "
set -g status-bg colour234
set -g status-fg white

# Bind appropriate commands similar to screen.
# lockscreen ^X x 
unbind ^X
bind ^X lock-server
unbind x
bind x lock-server

#bind-key "\033[C" select-layout next-window # change window with ctrl-right
#bind-key C-n netx-window

set-option -g base-index 1                        #窗口的初始序号；默认为0，这里设置为1
set-option -g display-time 5000                   #提示信息的持续时间；设置足够的时间以避免看不清提示，单位为毫秒
set-option -g repeat-time 1000                    #控制台激活后的持续时间；设置合适的时间以避免每次操作都要先激活控制台，单位为毫秒
set-option -g status-keys vi                      #操作状态栏时的默认键盘布局；可以设置为vi或emacs
set-option -g status-right "#(date +%H:%M' ')"    #状态栏右方的内容；这里的设置将得到类似23:59的显示
set-option -g status-right-length 10              #状态栏右方的内容长度；建议把更多的空间留给状态栏左方（用于列出当前窗口）
set-option -g status-utf8 on                      #开启状态栏的UTF-8支持
#
## screen ^C c 
#unbind ^C
#bind ^C new-window
#unbind c
#bind c new-window
#
## detach ^D d
#unbind ^D
#bind ^D detach
#
## displays * 
#unbind *
#bind * list-clients
#
## next ^@ ^N sp n 
#unbind ^@
#bind ^@ next-window
#unbind ^N
#bind ^N next-window
#unbind " "
#bind " " next-window
#unbind n
#bind n next-window
##bind "\033[C" next-window
#
## title A
#unbind A
#bind A command-prompt "rename-window %%"
#
## other ^A
#unbind ^A
#bind ^A last-window
#
## prev ^H ^P p ^? 
#unbind ^H
#bind ^H previous-window
#unbind ^P
#bind ^P previous-window
#unbind p
#bind p previous-window
#unbind BSpace
#bind BSpace previous-window
#
## windows ^W w 
#unbind ^W
#bind ^W list-windows
#unbind w
#bind w list-windows
#
## quit \ 
#unbind '\'
#bind '\' confirm-before "kill-server"
#
## kill K k 
#unbind K
#bind K confirm-before "kill-window"
#unbind k
#bind k confirm-before "kill-window"
#
## redisplay ^L l 
#unbind ^L
#bind ^L refresh-client
#unbind l
#bind l refresh-client
#
## split -v |
#unbind |
#bind | split-window
#
## :kB: focus up
#unbind Tab
#bind Tab select-pane -t:.+
#unbind BTab
#bind BTab select-pane -t:.-
#
## " windowlist -b
#unbind '"'
#bind '"' choose-window
##---------------------------------------------------------------------
## vim-keys
##
#bind s split-window -v
#bind v split-window -h
#
## move around panes with hjkl, as one would in vim after pressing ctrl-w
#bind h select-pane -L
#bind j select-pane -D
#bind k select-pane -U
#bind l select-pane -R
#
## resize panes like vim
## feel free to change the "1" to however many lines you want to resize by, only
## one at a time can be slow
#bind < resize-pane -L 1
#bind > resize-pane -R 1
#bind - resize-pane -D 1
#bind + resize-pane -U 1
#
## bind : to command-prompt like vim
## this is the default in tmux already
#bind : command-prompt
#
## vi-style controls for copy mode
#setw -g mode-keys vi
